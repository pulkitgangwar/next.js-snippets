{
  // nextjs app router
  "Nextjs app router root layout": {
    "prefix": "narootlayout",
    "body": [
      "export default function ${1:RootLayout}({children}) {",
      "\treturn (",
      "\t\t<html lang=\"en\">",
      "\t\t\t<body>",
      "\t\t\t\t<main>",
      "\t\t\t\t\t${2:{children\\}}",
      "\t\t\t\t</main>",
      "\t\t\t</body>",
      "\t\t</html>",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router root layout"
  },
  "Nextjs app router layout": {
    "prefix": "nalayout",
    "body": [
      "export default function ${1:Layout}({children}) {",
      "\treturn (",
      "\t\t<section>",
      "\t\t\t${2:{children\\}}",
      "\t\t</section>",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router layout"
  },
  "Nextjs app router page": {
    "prefix": "napage",
    "body": [
      "export default function ${1:Page}() {",
      "\treturn (",
      "\t\t${2:<div></div>}",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router page"
  },
  "Nextjs app router page with params": {
    "prefix": "napage:params",
    "body": [
      "export default async function ${1:Page}({ params }) {",
      "\tconst { ${2:param} } = await params;",
      "\treturn (",
      "\t\t${4:<div></div>}",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router page with params"
  },
  "Nextjs app router loading": {
    "prefix": "naloading",
    "body": [
      "export default function ${1:Loading}() {",
      "\treturn (",
      "\t\t<${2:div}>",
      "\t\t\t${3:Loading...}",
      "\t\t</${2:div}>",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router loading"
  },

  "Nextjs app router error": {
    "prefix": "naerror",
    "body": [
      "\"use client\"",
      "import { useEffect } from \"react\"",
      "",
      "export default function ${1:Error}({ error, reset }) {",
      "\t useEffect(() => {",
      "\t\t console.error(error)",
      "\t },[error])",
      "",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<h2>Something went wrong!</h2>",
      "\t\t\t<button onClick={reset}>",
      "\t\t\t\t Try again",
      "\t\t\t</button>",
      "\t\t</div>",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router error"
  },

  "Nextjs app router global error": {
    "prefix": "naglobalerror",
    "body": [
      "\"use client\"",
      "",
      "",
      "export default function ${1:GlobalError}({ error, reset }) {",
      "",
      "\treturn (",
      "\t\t<html>",
      "\t\t\t<body>",
      "\t\t\t\t<h2>Something went wrong!</h2>",
      "\t\t\t\t<button onClick={reset}>",
      "\t\t\t\t\t Try again",
      "\t\t\t\t</button>",
      "\t\t\t</body>",
      "\t\t</html>",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router global error"
  },
  "Nextjs app router template": {
    "prefix": "natemplate",
    "body": [
      "export default function ${1:Template}({children}) {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:{children\\}}",
      "\t\t</div>",
      "\t);",
      "}"
    ],
    "description": "Nextjs app router template"
  },

  // new easy to use extensions
  "Nextjs page with server side props": {
    "prefix": "nspage",
    "body": [
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export async function getServerSideProps(${3:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      ""
    ],
    "description": "Nextjs page with server side props"
  },
  "Nextjs page with static side props and static side paths": {
    "prefix": "nstaticpage",
    "body": [
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export async function getStaticPaths() {",
      "",
      "",
      "\treturn {",
      "\t\tpaths:${3:[]},",
      "\t\tfallback:${4:false}",
      "\t}",
      "}",
      "export async function getStaticProps(${5:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${6:data:null}",
      "\t\t}",
      "\t}",
      "}",
      ""
    ],
    "description": "Nextjs page with static props and static paths"
  },
  "Nextjs Custom 404 page": {
    "prefix": "nnotfound",
    "body": [
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<h1>",
      "\t\t\t\t${2:Page Not Found}",
      "\t\t\t</h1>",
      "\t\t</div>",
      "\t);",
      "}",
      ""
    ],
    "description": "Nextjs not found page"
  },
  "Nextjs Custom 500 page": {
    "prefix": "nservererror",
    "body": [
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<h1>",
      "\t\t\t\t${2:Server Error}",
      "\t\t\t</h1>",
      "\t\t</div>",
      "\t);",
      "}",
      ""
    ],
    "description": "Nextjs server error page"
  },
  "Nextjs getServerSideProps()": {
    "prefix": "ngetServerSideProps",
    "body": [
      "export async function getServerSideProps(${1:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${2:data:null}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Nextjs getServerSideProps function"
  },
  "Nextjs getStaticProps()": {
    "prefix": "ngetStaticProps",
    "body": [
      "export async function getStaticProps(${1:ctx}) {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${2:data:null}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Nextjs getStaticProps function"
  },
  "Nextjs getStaticPaths()": {
    "prefix": "ngetStaticPaths",
    "body": [
      "export async function getStaticPaths() {",
      "",
      "",
      "\treturn {",
      "\t\tpaths:${1:[]},",
      "\t\tfallback:${2:false}",
      "\t}",
      "}"
    ],
    "description": "Nextjs getStaticPaths function"
  },
  "Nextjs use link": {
    "prefix": "nul",
    "body": ["<Link href='${1:path}'>${2:link}</Link>"],
    "description": "Nextjs use link Element"
  },

  // function snippets for pages
  "Nextjs arrow function export at the end": {
    "prefix": "nafe",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "Next Arrow Function ,Export at the end"
  },
  "Nextjs arrow function": {
    "prefix": "naf",
    "body": [
      "export default () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${1:Enter}",
      "\t\t</div>",
      "\t);",
      "}"
    ],
    "description": "Next Arrow Function"
  },
  "Nextjs normal function with export at the end": {
    "prefix": "nfe",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "Next Normal Function ,Export at the end"
  },
  "Nextjs normal function": {
    "prefix": "nf",
    "body": [
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}"
    ],
    "description": "Next Normal Function"
  },

  // nextjs functions
  "Nextjs getServerSideProps": {
    "prefix": "ngsspr",
    "body": [
      "export const getServerSideProps = async (${1:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${2:data:null}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Next GetServerSideProps"
  },
  "Nextjs getStaticProps": {
    "prefix": "ngspr",
    "body": [
      "export const getStaticProps = async (${1:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${2:data:null}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Next GetStaticProps"
  },
  "Nextjs getStaticPaths": {
    "prefix": "ngspa",
    "body": [
      "export const getStaticPaths = async () => {",
      "",
      "",
      "\treturn {",
      "\t\tpaths:${1:[]},",
      "\t\tfallback:${2:false}",
      "\t}",
      "}"
    ],
    "description": "Next GetStaticPaths"
  },
  "Nextjs getInitialProps": {
    "prefix": "ngipr",
    "body": [
      "${1:${TM_FILENAME_BASE}}.getInitialProps = async (${2:ctx}) => {",
      "",
      "\treturn {",
      "\t\t${3:data:null}",
      "\t}",
      "}"
    ],
    "description": "Next GetInitialProps"
  },
  "Nextjs custom app (_app.js)": {
    "prefix": "ncapp",
    "body": [
      "export default function MyApp({ Component, pageProps }) {",
      "\treturn <Component {...pageProps} />",
      "}",
      ""
    ],
    "description": "Next Custom App (_app.js)"
  },
  "Nextjs Custom Document (_document.js)": {
    "prefix": "ncdocument",
    "body": [
      "import { Html, Head, Main, NextScript } from 'next/document'",
      "",
      "export default function Document() {",
      "\treturn (",
      "\t\t<Html>",
      "\t\t\t<Head/>",
      "\t\t\t<body>",
      "\t\t\t\t<Main />",
      "\t\t\t\t<NextScript />",
      "\t\t\t</body>",
      "\t\t</Html>",
      "\t)",
      "}",
      ""
    ],
    "description": "Next Custom Document (_document.js)"
  },
  // route handlers (nextjs 13)
  "Nextjs route handler get request": {
    "prefix": "nrget",
    "body": ["export async function GET(${1:request}) {", "\t${2:}", "}"],
    "description": "Nextjs get request route handler"
  },
  "Nextjs route handler post request": {
    "prefix": "nrpost",
    "body": ["export async function POST(${1:request}) {", "\t${2:}", "}"],
    "description": "Nextjs post request route handler"
  },
  "Nextjs route handler put request": {
    "prefix": "nrput",
    "body": ["export async function PUT(${1:request}) {", "\t${2:}", "}"],
    "description": "Nextjs put request route handler"
  },
  "Nextjs route handler patch request": {
    "prefix": "nrpatch",
    "body": ["export async function PATCH(${1:request}) {", "\t${2:}", "}"],
    "description": "Nextjs patch request route handler"
  },
  "Nextjs route handler delete request": {
    "prefix": "nrdelete",
    "body": ["export async function DELETE(${1:request}) {", "\t${2:}", "}"],
    "description": "Nextjs delete request route handler"
  },

  // api routes
  "Nextjs Api route": {
    "prefix": "napi",
    "body": [
      "export default function handler(${1:req}, ${2:res})  {",
      "",
      "\t${3:req.statusCode = 200}",
      "",
      "",
      "}"
    ],
    "description": "Next Api Route"
  },

  // functions with combinations

  "Nextjs arrow function (export at the end) with getServerSideProps": {
    "prefix": "nafewserver",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "",
      "export const getServerSideProps = async (${3:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(arrow function) with getServerSideProps"
  },
  "Nextjs normal function(export at the end) with getServerSideProps": {
    "prefix": "nfewserver",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export async function getServerSideProps(${3:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(normal function) with getServerSideProps"
  },
  "Nextjs arrow function with getStaticProps": {
    "prefix": "nafewstatic",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export const getStaticProps = async (${3:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(arrow function) with getStaticProps"
  },
  "Nextjs normal function(export at the end) with getStaticProps": {
    "prefix": "nfewstatic",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export async function getStaticProps(${3:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(normal function) with getStaticProps"
  },

  // static generation
  "Nextjs static generation": {
    "prefix": "!!static",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export const getStaticPaths = async () => {",
      "",
      "",
      "\treturn {",
      "\t\tpaths:${3:[]},",
      "\t\tfallback:${4:false}",
      "\t}",
      "}",
      "export const getStaticProps = async (${5:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${6:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ]
  },

  // import next components
  "Nextjs import for Link component": {
    "prefix": "nil",
    "body": ["import ${1:Link} from 'next/link';"],
    "description": "next import Link"
  },
  "Nextjs import for Router(default) component": {
    "prefix": "nir",
    "body": ["import ${1:Router} from 'next/router';"],
    "description": "next import Router(default)"
  },
  "Nextjs import for useRouter component": {
    "prefix": "niur",
    "body": ["import {useRouter} from 'next/router';"],
    "description": "next import useRouter"
  },
  "Nextjs import for Head component": {
    "prefix": "nih",
    "body": ["import ${1:Head} from 'next/head';"],
    "description": "next import Head"
  },
  "Nextjs import for Image component": {
    "prefix": "nii",
    "body": ["import ${1:Image} from 'next/image';"],
    "description": "next import Image"
  },
  "Nextjs import for Dynamic": {
    "prefix": "nid",
    "body": ["import ${1:dynamic} from 'next/dynamic';"],
    "description": "next import dynamic"
  },

  // nextjs imported components usage
  "Nextjs link component defination with href": {
    "prefix": "nulwhref",
    "body": ["<Link href='${1:path}'>${2:link}</Link>"],
    "description": "nextjs usage of link component with href"
  },

  "Nextjs useRouter component defination": {
    "prefix": "nuur",
    "body": ["const ${1:router} = useRouter();"],
    "description": "nextjs usage of useRouter component"
  },
  "Nextjs Head component defination": {
    "prefix": "nuh",
    "body": ["<Head>", "\t<title>${1:Title}</title>", "</Head>"],
    "description": "nextjs usage of Head Component"
  },
  "Nextjs Image component defination": {
    "prefix": "nui",
    "body": ["<Image src='${1:path}' width='' height='' alt='' />"],
    "description": "nextjs usage of Image Component"
  },
  "Nextjs Dynamic Import defination": {
    "prefix": "nud",
    "body": [
      "const ${1:DynamicComponent} = dynamic(() => import('${2:./path}'))"
    ],
    "description": "nextjs usage of Dynamic Import"
  },
  "Nextjs Dynamic Import defination with named exports": {
    "prefix": "nudwne",
    "body": [
      "const ${1:DynamicComponent} = dynamic(() =>",
      "\timport('${2:./path}').then((mod) => mod.${1:DynamicComponent})",
      ")"
    ],
    "description": "nextjs usage of Dynamic Import with named exports"
  }
}
