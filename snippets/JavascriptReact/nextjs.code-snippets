{
  // function snippets for pages
  "Nextjs arrow function export at the end": {
    "prefix": "nafe",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
    ],
    "description": "Next Arrow Function ,Export at the end"
  },
  "Nextjs arrow function": {
    "prefix": "naf",
    "body": [
      "export default () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${1:Enter}",
      "\t\t</div>",
      "\t);",
      "}"
    ],
    "description": "Next Arrow Function"
  },
  "Nextjs normal function with export at the end": {
    "prefix": "nfe",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "Next Normal Function ,Export at the end"
  },
  "Nextjs normal function": {
    "prefix": "nf",
    "body": [
      "export default function() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${1:Enter}",
      "\t\t</div>",
      "\t);",
      "}"
    ],
    "description": "Next Normal Function"
  },

  // nextjs functions
  "Nextjs getServerSideProps": {
    "prefix": "ngsspr",
    "body": [
      "export const getServerSideProps = async (${1:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${2:data:null}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Next GetServerSideProps"
  },
  "Nextjs getStaticProps": {
    "prefix": "ngspr",
    "body": [
      "export const getStaticProps = async (${1:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${2:data:null}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Next GetStaticProps"
  },
  "Nextjs getStaticPaths": {
    "prefix": "ngspa",
    "body": [
      "export const getStaticPaths = async () => {",
      "",
      "",
      "\treturn {",
      "\t\tpaths:${1:[]},",
      "\t\tfallback:${2:false}",
      "\t}",
      "}"
    ],
    "description": "Next GetStaticPaths"
  },
  "Nextjs getInitialProps": {
    "prefix": "ngipr",
    "body": [
      "${1:${TM_FILENAME_BASE}}.getInitialProps = async (${2:ctx}) => {",
      "",
      "\treturn {",
      "\t\t${3:data:null}",
      "\t}",
      "}"
    ],
    "description": "Next GetInitialProps"
  },
  "Nextjs custom app (_app.js)": {
    "prefix": "ncapp",
    "body": [
      "// import App from 'next/app'",
      "",
      "const MyApp = ({ Component, pageProps }) => {",
      "\treturn <Component {...pageProps} />",
      "}",
      "",
      "//MyApp.getInitialProps = async (appContext) => {",
      "//\t// calls page's `getInitialProps` and fills `appProps.pageProps`",
      "//\tconst appProps = await App.getInitialProps(appContext);",
      "//\treturn { ...appProps }",
      "// }",
      "",
      "export default MyApp;"
    ],
    "description": "Next Custom App (_app.js)"
  },
  "Nextjs Custom Document (_document.js)": {
    "prefix": "ncdocument",
    "body": [
      "import Document, { Html, Head, Main, NextScript } from 'next/document'",
      "",
      "class MyDocument extends Document {",
      "\tstatic async getInitialProps(ctx) {",
      "\t\tconst initialProps = await Document.getInitialProps(ctx)",
      "\t\treturn { ...initialProps }",
      "}",
      "",
      "\trender() {",
      "\t\treturn (",
      "\t\t\t<Html>",
      "\t\t\t\t<Head/>",
      "\t\t\t\t<body>",
      "\t\t\t\t\t<Main />",
      "\t\t\t\t\t<NextScript />",
      "\t\t\t\t</body>",
      "\t\t\t</Html>",
      "\t\t)",
      "\t}",
      "}",
      "",
      "export default MyDocument;"
    ],
    "description": "Next Custom Document (_document.js)"
  },

  // api routes
  "Nextjs Api route": {
    "prefix": "napi",
    "body": [
      "export default (${1:req}, ${2:res}) => {",
      "",
      "\t${3:req.statusCode = 200}",
      "",
      "",
      "}"
    ],
    "description": "Next Api Route"
  },

  // functions with combinations

  "Nextjs arrow function (export at the end) with getServerSideProps": {
    "prefix": "nafewserver",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "",
      "export const getServerSideProps = async (${3:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(arrow function) with getServerSideProps"
  },
  "Nextjs normal function(export at the end) with getServerSideProps": {
    "prefix": "nfewserver",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export async function getServerSideProps(${3:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(normal function) with getServerSideProps"
  },
  "Nextjs arrow function with getStaticProps": {
    "prefix": "nafewstatic",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export const getStaticProps = async (${3:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(arrow function) with getStaticProps"
  },
  "Nextjs normal function(export at the end) with getStaticProps": {
    "prefix": "nfewstatic",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export async function getStaticProps(${3:ctx}){",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${4:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "initializing page(normal function) with getStaticProps"
  },

  // static generation
  "Nextjs static generation": {
    "prefix": "!!static",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${2:Enter}",
      "\t\t</div>",
      "\t);",
      "}",
      "",
      "export const getStaticPaths = async () => {",
      "",
      "",
      "\treturn {",
      "\t\tpaths:${3:[]},",
      "\t\tfallback:${4:false}",
      "\t}",
      "}",
      "export const getStaticProps = async (${5:ctx}) => {",
      "",
      "",
      "\treturn {",
      "\t\tprops:{",
      "\t\t\t${6:data:null}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ]
  },

  // import next components
  "Nextjs import for Link component": {
    "prefix": "nil",
    "body": ["import ${1:Link} from 'next/link';"],
    "description": "next import Link"
  },
  "Nextjs import for Router(default) component": {
    "prefix": "nir",
    "body": ["import ${1:Router} from 'next/router';"],
    "description": "next import Router(default)"
  },
  "Nextjs import for useRouter component": {
    "prefix": "niur",
    "body": ["import {useRouter} from 'next/router';"],
    "description": "next import useRouter"
  },
  "Nextjs import for Head component": {
    "prefix": "nih",
    "body": ["import ${1:Head} from 'next/head';"],
    "description": "next import Head"
  },
  "Nextjs import for Image component": {
    "prefix": "nii",
    "body": ["import ${1:Image} from 'next/image';"],
    "description": "next import Image"
  },
  "Nextjs import for Dynamic": {
    "prefix": "nid",
    "body": ["import ${1:dynamic} from 'next/dynamic';"],
    "description": "next import dynamic"
  },

  // nextjs imported components usage
  "Nextjs link component defination with href": {
    "prefix": "nulwhref",
    "body": ["<Link href='${1:path}'><a>${2:value}</a></Link>"],
    "description": "nextjs usage of link component with href"
  },
  "Nextjs link component defination with href and as": {
    "prefix": "nulwas",
    "body": [
      "<Link href='${1:routepattern}' as='${2:path}'><a>${3:value}</a></Link>"
    ],
    "description": "nextjs usage of link component with href and as"
  },
  "Nextjs useRouter component defination": {
    "prefix": "nuur",
    "body": ["const ${1:router} = useRouter();"],
    "description": "nextjs usage of useRouter component"
  },
  "Nextjs Head component defination": {
    "prefix": "nuh",
    "body": ["<Head>", "\t<title>${1:Title}</title>", "</Head>"],
    "description": "nextjs usage of Head Component"
  },
  "Nextjs Image component defination": {
    "prefix": "nui",
    "body": ["<Image src='${1:path}' width='' height='' alt='' />"],
    "description": "nextjs usage of Image Component"
  },
  "Nextjs Dynamic Import defination": {
    "prefix": "nud",
    "body": ["const ${1:DynamicComponent} = dynamic(() => import('${2:./path}'))"],
    "description": "nextjs usage of Dynamic Import"
  },
  "Nextjs Dynamic Import defination with named exports": {
    "prefix": "nudwne",
    "body": ["const ${1:DynamicComponent} = dynamic(() =>", "\timport('${2:./path}').then((mod) => mod.${1:DynamicComponent})", ")"],
    "description": "nextjs usage of Dynamic Import with named exports"
  },
}
